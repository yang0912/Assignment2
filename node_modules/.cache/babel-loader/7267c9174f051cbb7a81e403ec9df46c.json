{"ast":null,"code":"var _jsxFileName = \"/Users/tcyz/Desktop/Assignment2/src/compoments/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => React.createElement(\"div\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, post.body)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Posts\"), postItems);\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    posts: state.posts.items,\n    newPost: state.posts.item\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearMessage: () => {\n      dispatch(clearMessage());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/tcyz/Desktop/Assignment2/src/compoments/Posts.js"],"names":["React","Component","PropTypes","connect","fetchPosts","Posts","componentWillMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","postItems","map","post","id","title","body","propTypes","func","isRequired","array","object","mapStateToProps","state","console","log","items","item","mapDispatchToProps","dispatch","clearMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACC,OAAd,EAAuB;AACrB,WAAKH,KAAL,CAAWI,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IACzC;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,IAAI,CAACG,IAAT,CAFF,CADgB,CAAlB;AAMA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGL,SAFH,CADF;AAMD;;AAxB2B;;AA2B9BT,KAAK,CAACe,SAAN,GAAkB;AAChBhB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEhBX,EAAAA,KAAK,EAAET,SAAS,CAACqB,KAAV,CAAgBD,UAFP;AAGhBZ,EAAAA,OAAO,EAAER,SAAS,CAACsB;AAHH,CAAlB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SAAM;AACJf,IAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYkB,KADf;AAEJnB,IAAAA,OAAO,EAAEgB,KAAK,CAACf,KAAN,CAAYmB;AAFjB,GAAN;AAID,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJC,IAAAA,YAAY,EAAC,MAAM;AACjBD,MAAAA,QAAQ,CAACC,YAAY,EAAb,CAAR;AACD;AAHG,GAAN;AAKD,CAND;;AAQA,eAAe9B,OAAO,CAACsB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C1B,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ));\n    return (\n      <div>\n        <h1>Posts</h1>\n        {postItems}\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object,\n\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n\n  return{\n    posts: state.posts.items,\n    newPost: state.posts.item\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    clearMessage:() => {\n      dispatch(clearMessage());\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);"]},"metadata":{},"sourceType":"module"}