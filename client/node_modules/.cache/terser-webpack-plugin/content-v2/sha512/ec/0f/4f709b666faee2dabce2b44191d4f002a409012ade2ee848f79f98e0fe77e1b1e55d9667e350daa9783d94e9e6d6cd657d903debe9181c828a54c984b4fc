{"map":"{\"version\":3,\"sources\":[\"/Users/tcyz/Desktop/Assignment2/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/tcyz/Desktop/Assignment2/src/logo.svg\",\"/Users/tcyz/Desktop/Assignment2/src/compoments/Posts.js\",\"/Users/tcyz/Desktop/Assignment2/src/actions/postAction.js\",\"/Users/tcyz/Desktop/Assignment2/src/actions/types.js\",\"/Users/tcyz/Desktop/Assignment2/src/compoments/PostForm.js\",\"/Users/tcyz/Desktop/Assignment2/src/App.js\",\"/Users/tcyz/Desktop/Assignment2/src/serviceWorker.js\",\"/Users/tcyz/Desktop/Assignment2/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Posts\",\"this\",\"props\",\"fetchPosts\",\"nextProps\",\"newPost\",\"posts\",\"unshift\",\"postItems\",\"map\",\"post\",\"react_default\",\"a\",\"createElement\",\"key\",\"id\",\"title\",\"body\",\"Component\",\"connect\",\"state\",\"items\",\"item\",\"dispatch\",\"fetch\",\"then\",\"res\",\"json\",\"type\",\"payload\",\"PostForm\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onChange\",\"bind\",\"assertThisInitialized\",\"onSubmit\",\"e\",\"setState\",\"defineProperty\",\"target\",\"name\",\"value\",\"preventDefault\",\"createPost\",\"postData\",\"method\",\"headers\",\"content-type\",\"JSON\",\"stringify\",\"store\",\"createStore\",\"applyMiddleware\",\"App\",\"es\",\"className\",\"src\",\"logo\",\"alt\",\"compoments_PostForm\",\"compoments_Posts\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\nimport { connect } from 'react-redux';\\nimport { fetchPosts } from '../actions/postAction';\\n\\nclass Posts extends Component {\\n  componentWillMount() {\\n    this.props.fetchPosts();\\n  }\\n\\n  componentWillReceiveProps(nextProps) {\\n    if (nextProps.newPost) {\\n      this.props.posts.unshift(nextProps.newPost);\\n    }\\n  }\\n\\n  render() {\\n    const postItems = this.props.posts.map(post => (\\n      <div key={post.id}>\\n        <h3>{post.title}</h3>\\n        <p>{post.body}</p>\\n      </div>\\n    ));\\n    return (\\n      <div>\\n        <h1>Posts</h1>\\n        {postItems}\\n      </div>\\n    );\\n  }\\n}\\n\\nPosts.propTypes = {\\n  fetchPosts: PropTypes.func.isRequired,\\n  posts: PropTypes.array.isRequired,\\n  newPost: PropTypes.object\\n};\\n\\nconst mapStateToProps = state => ({\\n  posts: state.posts.items,\\n  newPost: state.posts.item\\n});\\n\\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\",\"import { FETCH_POSTS, NEW_POST } from './types';\\n\\nexport const fetchPosts = () => dispatch => {\\n  fetch('https://jsonplaceholder.typicode.com/posts')\\n    .then(res => res.json())\\n    .then(posts =>\\n      dispatch({\\n        type: FETCH_POSTS,\\n        payload: posts\\n      })\\n    );\\n};\\n\\nexport const createPost = postData => dispatch => {\\n  fetch('https://jsonplaceholder.typicode.com/posts', {\\n    method: 'POST',\\n    headers: {\\n      'content-type': 'application/json'\\n    },\\n    body: JSON.stringify(postData)\\n  })\\n    .then(res => res.json())\\n    .then(post =>\\n      dispatch({\\n        type: NEW_POST,\\n        payload: post\\n      })\\n    );\\n};\\n\\n\",\"export const FETCH_POSTS = 'FETCH_POSTS';\\nexport const NEW_POST = 'NEW_POST';\\n\",\"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\nimport { connect } from 'react-redux';\\nimport { createPost } from '../actions/postAction';\\n\\nclass PostForm extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      title: '',\\n      body: ''\\n    };\\n\\n    this.onChange = this.onChange.bind(this);\\n    this.onSubmit = this.onSubmit.bind(this);\\n  }\\n\\n  onChange(e) {\\n    this.setState({ [e.target.name]: e.target.value });\\n  }\\n\\n  onSubmit(e) {\\n    e.preventDefault();\\n\\n    const post = {\\n      title: this.state.title,\\n      body: this.state.body\\n    };\\n\\n    this.props.createPost(post);\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <h1>Add Post</h1>\\n        <form onSubmit={this.onSubmit}>\\n          <div>\\n            <label>Title: </label>\\n            <br />\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"title\\\"\\n              onChange={this.onChange}\\n              value={this.state.title}\\n            />\\n          </div>\\n          <br />\\n          <div>\\n            <label>Body: </label>\\n            <br />\\n            <textarea\\n              name=\\\"body\\\"\\n              onChange={this.onChange}\\n              value={this.state.body}\\n            />\\n          </div>\\n          <br />\\n          <button type=\\\"submit\\\">Submit</button>\\n        </form>\\n      </div>\\n    );\\n  }\\n}\\n\\nPostForm.propTypes = {\\n  createPost: PropTypes.func.isRequired\\n};\\n\\nexport default connect(null, { createPost })(PostForm);\",\"import React, {Component} from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport {Provider} from 'react-redux';\\n\\nimport Posts from './compoments/Posts';\\nimport PostForm from './compoments/PostForm';\\nimport { createStore, applyMiddleware } from 'redux';\\n\\nconst store = createStore(() => [],{},applyMiddleware());\\n\\nclass App extends Component{\\n// function App() {\\n  render() {\\n    return (\\n      <Provider store={store}>\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <h1 className='App-title'> welcome</h1>\\n        </header>\\n        <PostForm />\\n        <hr/>\\n        <Posts />\\n      </div>\\n      </Provider>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},20:function(e,t,n){e.exports=n(31)},25:function(e,t,n){},26:function(e,t,n){},31:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),l=n(11),c=n.n(l),r=(n(25),n(3)),i=n(4),s=n(8),u=n(5),m=n(7),p=n(17),h=n.n(p),b=(n(26),n(6)),d=function(e){function t(){return Object(r.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"componentWillMount\",value:function(){this.props.fetchPosts()}},{key:\"componentWillReceiveProps\",value:function(e){e.newPost&&this.props.posts.unshift(e.newPost)}},{key:\"render\",value:function(){var e=this.props.posts.map(function(e){return o.a.createElement(\"div\",{key:e.id},o.a.createElement(\"h3\",null,e.title),o.a.createElement(\"p\",null,e.body))});return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Posts\"),e)}}]),t}(a.Component),f=Object(b.b)(function(e){return{posts:e.posts.items,newPost:e.posts.item}},{fetchPosts:function(){return function(e){fetch(\"https://jsonplaceholder.typicode.com/posts\").then(function(e){return e.json()}).then(function(t){return e({type:\"FETCH_POSTS\",payload:t})})}}})(d),E=n(19),y=n(1),j=function(e){function t(e){var n;return Object(r.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={title:\"\",body:\"\"},n.onChange=n.onChange.bind(Object(y.a)(n)),n.onSubmit=n.onSubmit.bind(Object(y.a)(n)),n}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"onChange\",value:function(e){this.setState(Object(E.a)({},e.target.name,e.target.value))}},{key:\"onSubmit\",value:function(e){e.preventDefault();var t={title:this.state.title,body:this.state.body};this.props.createPost(t)}},{key:\"render\",value:function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Add Post\"),o.a.createElement(\"form\",{onSubmit:this.onSubmit},o.a.createElement(\"div\",null,o.a.createElement(\"label\",null,\"Title: \"),o.a.createElement(\"br\",null),o.a.createElement(\"input\",{type:\"text\",name:\"title\",onChange:this.onChange,value:this.state.title})),o.a.createElement(\"br\",null),o.a.createElement(\"div\",null,o.a.createElement(\"label\",null,\"Body: \"),o.a.createElement(\"br\",null),o.a.createElement(\"textarea\",{name:\"body\",onChange:this.onChange,value:this.state.body})),o.a.createElement(\"br\",null),o.a.createElement(\"button\",{type:\"submit\"},\"Submit\")))}}]),t}(a.Component),v=Object(b.b)(null,{createPost:function(e){return function(t){fetch(\"https://jsonplaceholder.typicode.com/posts\",{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify(e)}).then(function(e){return e.json()}).then(function(e){return t({type:\"NEW_POST\",payload:e})})}}})(j),O=n(9),g=Object(O.c)(function(){return[]},{},Object(O.a)()),w=function(e){function t(){return Object(r.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return o.a.createElement(b.a,{store:g},o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(\"header\",{className:\"App-header\"},o.a.createElement(\"img\",{src:h.a,className:\"App-logo\",alt:\"logo\"}),o.a.createElement(\"h1\",{className:\"App-title\"},\" welcome\")),o.a.createElement(v,null),o.a.createElement(\"hr\",null),o.a.createElement(f,null)))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[20,1,2]]]);","extractedComments":[]}